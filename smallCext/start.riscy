	org	0
	li	d,0xff
	stackpage	d

	.call	start
	halt

	org	100
.func printhex
	; prints a byte in A as two hex chars
	push	a
	push	a
	li	d,0xf0
	nand	a,d
	nand	a,a
	li	b,16
	.call div_even
	.if a < 0xa then printhex_num1
	li	d,0xa
	sub	a,d
	li	d,0x41
	add	a,d
	.goto printhex2
#printhex_num1
	li	d,0x30
	add	a,d
#printhex2
	out	a
	pop	a
	li	b,0xf
	nand	a,b
	nand	a,a
	.if a < 0xa then printhex_num2
	li	d,0xa
	sub	a,d
	li	d,0x41
	add	a,d
	.goto printhex3
#printhex_num2
	li	d,0x30
	add	a,d
#printhex3
	out	a
	pop	a
.endfunc


	org	200
.func div
	; A = A / B
	li	c,0
	.if b == 0 then div_done

	; check special cases: b is negative (b>128)
	.if b < 0 then div_neg_b
	;if a is negative initially (a>127) then subtract b until a becomes positive
#div_negadjust
	.if a >= 0 then divwhile
	sub	a,b
	inc	c
	.goto div_negadjust
#divwhile
	.if a < b then div_done
	sub	a,b
	inc	c
	.goto	divwhile
#div_neg_b
	; b is very large.  if a is positive, then a/b==0
	.if a >= 0 then div_done
	.if a < b then div_done
	.if a != b then div_negadjust
	; a==b
	li	c,1
#div_done
	.move	a,c
.endfunc
.func mod
	; A = A % B
	.if b == 0 then mod0
	; special case: b>127
	.if b < 0 then mod_neg_b
#mod_negadjust
	.if a >= 0 then modwhile
	sub	a,b
	.goto mod_negadjust
#modwhile
	.if a < b then modwhileend
	sub	a,b
	.goto modwhile
#mod0
	li	a,0
	.goto modwhileend
#mod_neg_b
	; b is > 127
	; if a is positive, then just return a
	.if a >= 0 then modwhileend
	; if a < b then return a
	.if a < b then modwhileend
	.if a != b then mod_negadjust
	; a == b, so return 0
	li	a,0
#modwhileend
.endfunc

	org	300
.func div_even
        ; A = A / B
        ; only works if A%B is 0
        li      c,0
#divewhile
        .if a == 0 then divewhileend
        sub     a,b
        inc     c
        .goto divewhile
#divewhileend
        sub     a,a
        add     a,c
.endfunc

.func mul
	; A = A * B
	sub	c,c
#mulloop
	.if b == 0 then mulend
	add	c,a
	dec	b
	.goto mulloop
#mulend
	.move a,c
.endfunc

	org	400
.func printint
	; prints an integer in A as two digits
	push	a
	li	b,0xa
	.call div
	li	d,0x30
	add	a,d
	out	a
	pop	a
	li	b,0xa
	.call mod
	li	d,0x30
	add	a,d
	out	a
.endfunc

	org	500
.func start
